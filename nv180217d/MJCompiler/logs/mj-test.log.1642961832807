INFO  19:16:30,660 - Compiling source file: C:\Users\vukas\Desktop\PP1\PP1 PROJEKAT\workspace\MJCompiler\test\program.mj
INFO  19:16:30,694 - #2 program
INFO  19:16:30,694 - #15 test3
INFO  19:16:30,694 - #24 const
INFO  19:16:30,695 - #15 int
INFO  19:16:30,695 - #15 pi
INFO  19:16:30,695 - #8 =
INFO  19:16:30,695 - #17 true
INFO  19:16:30,695 - #5 ;
INFO  19:16:30,696 - #15 cont
INFO  19:16:30,696 - #15 tip
INFO  19:16:30,696 - #15 x
ERROR 19:16:30,696 - 
Sintaksna greska na liniji 4
INFO  19:16:30,697 - #8 =
INFO  19:16:30,697 - #14 8
INFO  19:16:30,697 - #5 ;
INFO  19:16:30,697 - #15 int
INFO  19:16:30,697 - #15 a
INFO  19:16:30,697 - #11 ,
ERROR 19:16:30,697 - Greska kod kljucne definicije globalne promenljive izvrsen oporavak do ; u liniji 4
INFO  19:16:30,699 - #15 b
INFO  19:16:30,699 - #11 ,
INFO  19:16:30,699 - #15 c
INFO  19:16:30,699 - #5 ;
INFO  19:16:30,699 - #15 char
INFO  19:16:30,699 - #15 d
INFO  19:16:30,699 - #5 ;
INFO  19:16:30,699 - #29 record
INFO  19:16:30,699 - #15 Rekord
INFO  19:16:30,699 - #3 {
INFO  19:16:30,699 - #15 int
INFO  19:16:30,700 - #15 prvopolje
INFO  19:16:30,700 - #5 ;
INFO  19:16:30,700 - #15 bool
INFO  19:16:30,701 - #15 drugopolje
INFO  19:16:30,701 - #5 ;
INFO  19:16:30,701 - #4 }
INFO  19:16:30,701 - #27 class
INFO  19:16:30,701 - #15 Klasa
INFO  19:16:30,701 - #28 extends
INFO  19:16:30,701 - #15 int
INFO  19:16:30,701 - #3 {
INFO  19:16:30,701 - #4 }
INFO  19:16:30,702 - #27 class
INFO  19:16:30,702 - #15 Klasadruga
INFO  19:16:30,703 - #28 extends
INFO  19:16:30,703 - #15 Rekord
INFO  19:16:30,703 - #3 {
INFO  19:16:30,703 - #4 }
INFO  19:16:30,703 - #27 class
INFO  19:16:30,703 - #15 Osnovna
INFO  19:16:30,703 - #3 {
INFO  19:16:30,703 - #3 {
INFO  19:16:30,703 - #15 konstruktor
INFO  19:16:30,703 - #6 (
INFO  19:16:30,703 - #7 )
INFO  19:16:30,703 - #3 {
INFO  19:16:30,704 - #4 }
INFO  19:16:30,704 - #4 }
INFO  19:16:30,704 - #4 }
INFO  19:16:30,704 - #27 class
INFO  19:16:30,704 - #15 Izvedena
INFO  19:16:30,704 - #28 extends
INFO  19:16:30,705 - #15 Osnovna
INFO  19:16:30,705 - #3 {
INFO  19:16:30,705 - #4 }
INFO  19:16:30,705 - #3 {
INFO  19:16:30,705 - #13 void
INFO  19:16:30,705 - #15 main
INFO  19:16:30,705 - #6 (
INFO  19:16:30,706 - #7 )
INFO  19:16:30,706 - #3 {
INFO  19:16:30,706 - #15 a
INFO  19:16:30,706 - #8 =
INFO  19:16:30,707 - #15 Rekord
INFO  19:16:30,707 - #5 ;
INFO  19:16:30,707 - #15 d
INFO  19:16:30,708 - #36 ++
INFO  19:16:30,708 - #5 ;
INFO  19:16:30,708 - #4 }
INFO  19:16:30,708 - #4 }
INFO  19:16:30,714 - Program(
  ProgName(
   test3
  ) [ProgName]
  ProgramClassDecl(
    ProgramClassDecl(
      ProgramClassDecl(
        ProgramClassDecl(
          ProgramRecordDecl(
            ProgramVarDecl(
              ProgramVarDecl(
                ProgramVarDecl(
                  ProgramConstDecl(
                    NoProgPar(
                    ) [NoProgPar]
                    ConstDeclList(
                      Type(
                       int
                      ) [Type]
                      ConstDeclaration(
                        ConstParam(
                          ConstAsign(
                           pi
                            BoolConst(
                             true
                            ) [BoolConst]
                          ) [ConstAsign]
                        ) [ConstParam]
                      ) [ConstDeclaration]
                    ) [ConstDeclList]
                  ) [ProgramConstDecl]
                  GlobVarDecl(
                    Type(
                     cont
                    ) [Type]
                    GlobalDeclalartion(
                      GlobalVarDeclSemiError(
                      ) [GlobalVarDeclSemiError]
                    ) [GlobalDeclalartion]
                  ) [GlobVarDecl]
                ) [ProgramVarDecl]
                GlobVarDecl(
                  Type(
                   int
                  ) [Type]
                  GlobalDeclarations(
                    GlobalVarDeclComma(
                      VarDeclGlobalName(
                       a
                        NoVarDeclBraces(
                        ) [NoVarDeclBraces]
                      ) [VarDeclGlobalName]
                    ) [GlobalVarDeclComma]
                    GlobalDeclarations(
                      GlobalVarDeclComma(
                        VarDeclGlobalName(
                         b
                          NoVarDeclBraces(
                          ) [NoVarDeclBraces]
                        ) [VarDeclGlobalName]
                      ) [GlobalVarDeclComma]
                      GlobalDeclalartion(
                        GlobalVarDeclSemi(
                          VarDeclGlobalName(
                           c
                            NoVarDeclBraces(
                            ) [NoVarDeclBraces]
                          ) [VarDeclGlobalName]
                        ) [GlobalVarDeclSemi]
                      ) [GlobalDeclalartion]
                    ) [GlobalDeclarations]
                  ) [GlobalDeclarations]
                ) [GlobVarDecl]
              ) [ProgramVarDecl]
              GlobVarDecl(
                Type(
                 char
                ) [Type]
                GlobalDeclalartion(
                  GlobalVarDeclSemi(
                    VarDeclGlobalName(
                     d
                      NoVarDeclBraces(
                      ) [NoVarDeclBraces]
                    ) [VarDeclGlobalName]
                  ) [GlobalVarDeclSemi]
                ) [GlobalDeclalartion]
              ) [GlobVarDecl]
            ) [ProgramVarDecl]
            RecordDecl(
              RecordName(
               Rekord
              ) [RecordName]
              VarDeclClassMor(
                VarDeclClassMor(
                  NoVarDeclClassMore(
                  ) [NoVarDeclClassMore]
                  VarDeclClass(
                    Type(
                     int
                    ) [Type]
                    VarDeclClassName(
                     prvopolje
                      NoVarDeclBraces(
                      ) [NoVarDeclBraces]
                    ) [VarDeclClassName]
                    NoVarDecClasslList(
                    ) [NoVarDecClasslList]
                  ) [VarDeclClass]
                ) [VarDeclClassMor]
                VarDeclClass(
                  Type(
                   bool
                  ) [Type]
                  VarDeclClassName(
                   drugopolje
                    NoVarDeclBraces(
                    ) [NoVarDeclBraces]
                  ) [VarDeclClassName]
                  NoVarDecClasslList(
                  ) [NoVarDecClasslList]
                ) [VarDeclClass]
              ) [VarDeclClassMor]
            ) [RecordDecl]
          ) [ProgramRecordDecl]
          ClassDecl(
            ClassName(
             Klasa
            ) [ClassName]
            ClassExtends(
              ClassExtendCheckNoError(
                Type(
                 int
                ) [Type]
              ) [ClassExtendCheckNoError]
            ) [ClassExtends]
            NoClassDeclVarDeclMore(
            ) [NoClassDeclVarDeclMore]
            NoClassDeclBody(
            ) [NoClassDeclBody]
          ) [ClassDecl]
        ) [ProgramClassDecl]
        ClassDecl(
          ClassName(
           Klasadruga
          ) [ClassName]
          ClassExtends(
            ClassExtendCheckNoError(
              Type(
               Rekord
              ) [Type]
            ) [ClassExtendCheckNoError]
          ) [ClassExtends]
          NoClassDeclVarDeclMore(
          ) [NoClassDeclVarDeclMore]
          NoClassDeclBody(
          ) [NoClassDeclBody]
        ) [ClassDecl]
      ) [ProgramClassDecl]
      ClassDecl(
        ClassName(
         Osnovna
        ) [ClassName]
        NoClassExtends(
        ) [NoClassExtends]
        NoClassDeclVarDeclMore(
        ) [NoClassDeclVarDeclMore]
        ClassDeclCon(
          ConstructorDecl(
            ConstructorName(
             konstruktor
            ) [ConstructorName]
            NoVarDeclMore(
            ) [NoVarDeclMore]
            NoMoreStatement(
            ) [NoMoreStatement]
          ) [ConstructorDecl]
        ) [ClassDeclCon]
      ) [ClassDecl]
    ) [ProgramClassDecl]
    ClassDecl(
      ClassName(
       Izvedena
      ) [ClassName]
      ClassExtends(
        ClassExtendCheckNoError(
          Type(
           Osnovna
          ) [Type]
        ) [ClassExtendCheckNoError]
      ) [ClassExtends]
      NoClassDeclVarDeclMore(
      ) [NoClassDeclVarDeclMore]
      NoClassDeclBody(
      ) [NoClassDeclBody]
    ) [ClassDecl]
  ) [ProgramClassDecl]
  MethodDeclLists(
    NoMethodDeclList(
    ) [NoMethodDeclList]
    MethodDecl(
      MethodTypeName(
        TypeV(
        ) [TypeV]
       main
      ) [MethodTypeName]
      NoMethodDeclFormPars(
      ) [NoMethodDeclFormPars]
      NoVarDeclMore(
      ) [NoVarDeclMore]
      MoreStatements(
        MoreStatements(
          NoMoreStatement(
          ) [NoMoreStatement]
          StatementSingle(
            MatchedStmt(
              StatementDesignator(
                DesignatorStatement(
                  Designator(
                    DesignatorMoreSingle(
                      DesignatorName(
                       a
                      ) [DesignatorName]
                    ) [DesignatorMoreSingle]
                  ) [Designator]
                  DesignatorAdditionAE(
                    Assignop(
                    ) [Assignop]
                    DesignatorAdditionExprSem(
                      PlusExpr(
                        NoMulopTerm(
                          FactorVar(
                            Designator(
                              DesignatorMoreSingle(
                                DesignatorName(
                                 Rekord
                                ) [DesignatorName]
                              ) [DesignatorMoreSingle]
                            ) [Designator]
                          ) [FactorVar]
                        ) [NoMulopTerm]
                      ) [PlusExpr]
                    ) [DesignatorAdditionExprSem]
                  ) [DesignatorAdditionAE]
                ) [DesignatorStatement]
              ) [StatementDesignator]
            ) [MatchedStmt]
          ) [StatementSingle]
        ) [MoreStatements]
        StatementSingle(
          MatchedStmt(
            StatementDesignator(
              DesignatorStatement(
                Designator(
                  DesignatorMoreSingle(
                    DesignatorName(
                     d
                    ) [DesignatorName]
                  ) [DesignatorMoreSingle]
                ) [Designator]
                DesignatorAdditionPlusPlus(
                ) [DesignatorAdditionPlusPlus]
              ) [DesignatorStatement]
            ) [StatementDesignator]
          ) [MatchedStmt]
        ) [StatementSingle]
      ) [MoreStatements]
    ) [MethodDecl]
  ) [MethodDeclLists]
) [Program]
INFO  19:16:30,714 - ===================================
ERROR 19:16:30,716 - GRESKA: Konstanta pi ima nekompatiblini tip i vrednost na liniji 3
ERROR 19:16:30,716 - GRESKA: Nije pronadjen tip cont u tabeli simbola na liniji 4
ERROR 19:16:30,717 - GRESKA: Klasa se ne moze naslediti iz int na liniji 15
ERROR 19:16:30,717 - GRESKA: Klasa se ne moze naslediti iz Rekord na liniji 18
ERROR 19:16:30,717 - GRESKA: Klasa mora imati konstruktor sa istim imenom kao i klasa konstruktor na liniji 23
INFO  19:16:30,717 - Pristupa se globalnoj promenljivi a na liniji 35
INFO  19:16:30,717 - Koristi se promenljiva tipa record ili klase Rekord na liniji 35
ERROR 19:16:30,717 - GRESKA: Ime ne predstavlja promenljivu, element niza ili polje klase Rekord na liniji 35
ERROR 19:16:30,717 - GRESKA: Designator i expr nisu istog tipa na liniji 35
INFO  19:16:30,717 - Pristupa se globalnoj promenljivi d na liniji 36
ERROR 19:16:30,717 - GRESKA: Designator nije tipa int 
INFO  19:16:30,717 - ===================================
ERROR 19:16:30,718 - Parsiranje NIJE uspesno zavrseno!
