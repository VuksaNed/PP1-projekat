INFO  19:35:03,769 - Compiling source file: C:\Users\vukas\Desktop\PP1\PP1 PROJEKAT\workspace\MJCompiler\test\program.mj
INFO  19:35:03,802 - #2 program
INFO  19:35:03,802 - #15 test4
INFO  19:35:03,802 - #15 int
INFO  19:35:03,803 - #15 x
INFO  19:35:03,803 - #11 ,
INFO  19:35:03,804 - #15 y
INFO  19:35:03,804 - #11 ,
INFO  19:35:03,804 - #15 z
INFO  19:35:03,804 - #5 ;
INFO  19:35:03,804 - #29 record
INFO  19:35:03,804 - #15 Record
INFO  19:35:03,804 - #3 {
INFO  19:35:03,805 - #15 int
INFO  19:35:03,805 - #15 prvi
INFO  19:35:03,805 - #5 ;
INFO  19:35:03,805 - #4 }
INFO  19:35:03,806 - #15 Record
INFO  19:35:03,806 - #15 a
INFO  19:35:03,806 - #5 ;
INFO  19:35:03,806 - #3 {
INFO  19:35:03,806 - #15 int
INFO  19:35:03,807 - #15 funkcija
INFO  19:35:03,807 - #6 (
INFO  19:35:03,807 - #7 )
INFO  19:35:03,807 - #3 {
INFO  19:35:03,808 - #9 return
INFO  19:35:03,808 - #16 'a'
INFO  19:35:03,808 - #5 ;
INFO  19:35:03,809 - #4 }
INFO  19:35:03,809 - #13 void
INFO  19:35:03,809 - #15 main
INFO  19:35:03,809 - #6 (
INFO  19:35:03,809 - #7 )
INFO  19:35:03,809 - #3 {
INFO  19:35:03,810 - #15 y
INFO  19:35:03,810 - #8 =
INFO  19:35:03,810 - #15 x
INFO  19:35:03,810 - #6 (
INFO  19:35:03,810 - #7 )
INFO  19:35:03,810 - #5 ;
INFO  19:35:03,811 - #31 break
INFO  19:35:03,811 - #5 ;
INFO  19:35:03,811 - #32 continue
INFO  19:35:03,811 - #5 ;
INFO  19:35:03,811 - #18 if
INFO  19:35:03,812 - #6 (
INFO  19:35:03,812 - #14 1
INFO  19:35:03,812 - #7 )
INFO  19:35:03,813 - #12 print
INFO  19:35:03,813 - #6 (
INFO  19:35:03,813 - #15 a
INFO  19:35:03,813 - #7 )
INFO  19:35:03,813 - #5 ;
INFO  19:35:03,813 - #35 read
INFO  19:35:03,814 - #6 (
INFO  19:35:03,814 - #15 a
INFO  19:35:03,814 - #7 )
INFO  19:35:03,814 - #5 ;
INFO  19:35:03,814 - #4 }
INFO  19:35:03,814 - #4 }
INFO  19:35:03,820 - Program(
  ProgName(
   test4
  ) [ProgName]
  ProgramVarDecl(
    ProgramRecordDecl(
      ProgramVarDecl(
        NoProgPar(
        ) [NoProgPar]
        GlobVarDecl(
          Type(
           int
          ) [Type]
          GlobalDeclarations(
            GlobalVarDeclComma(
              VarDeclGlobalName(
               x
                NoVarDeclBraces(
                ) [NoVarDeclBraces]
              ) [VarDeclGlobalName]
            ) [GlobalVarDeclComma]
            GlobalDeclarations(
              GlobalVarDeclComma(
                VarDeclGlobalName(
                 y
                  NoVarDeclBraces(
                  ) [NoVarDeclBraces]
                ) [VarDeclGlobalName]
              ) [GlobalVarDeclComma]
              GlobalDeclalartion(
                GlobalVarDeclSemi(
                  VarDeclGlobalName(
                   z
                    NoVarDeclBraces(
                    ) [NoVarDeclBraces]
                  ) [VarDeclGlobalName]
                ) [GlobalVarDeclSemi]
              ) [GlobalDeclalartion]
            ) [GlobalDeclarations]
          ) [GlobalDeclarations]
        ) [GlobVarDecl]
      ) [ProgramVarDecl]
      RecordDecl(
        RecordName(
         Record
        ) [RecordName]
        VarDeclClassMor(
          NoVarDeclClassMore(
          ) [NoVarDeclClassMore]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarDeclClassName(
             prvi
              NoVarDeclBraces(
              ) [NoVarDeclBraces]
            ) [VarDeclClassName]
            NoVarDecClasslList(
            ) [NoVarDecClasslList]
          ) [VarDeclClass]
        ) [VarDeclClassMor]
      ) [RecordDecl]
    ) [ProgramRecordDecl]
    GlobVarDecl(
      Type(
       Record
      ) [Type]
      GlobalDeclalartion(
        GlobalVarDeclSemi(
          VarDeclGlobalName(
           a
            NoVarDeclBraces(
            ) [NoVarDeclBraces]
          ) [VarDeclGlobalName]
        ) [GlobalVarDeclSemi]
      ) [GlobalDeclalartion]
    ) [GlobVarDecl]
  ) [ProgramVarDecl]
  MethodDeclLists(
    MethodDeclLists(
      NoMethodDeclList(
      ) [NoMethodDeclList]
      MethodDecl(
        MethodTypeName(
          TypeT(
            Type(
             int
            ) [Type]
          ) [TypeT]
         funkcija
        ) [MethodTypeName]
        NoMethodDeclFormPars(
        ) [NoMethodDeclFormPars]
        NoVarDeclMore(
        ) [NoVarDeclMore]
        MoreStatements(
          NoMoreStatement(
          ) [NoMoreStatement]
          StatementSingle(
            MatchedStmt(
              StatementReturnExpr(
                PlusExpr(
                  NoMulopTerm(
                    FactorConst(
                      CharConst(
                       'a'
                      ) [CharConst]
                    ) [FactorConst]
                  ) [NoMulopTerm]
                ) [PlusExpr]
              ) [StatementReturnExpr]
            ) [MatchedStmt]
          ) [StatementSingle]
        ) [MoreStatements]
      ) [MethodDecl]
    ) [MethodDeclLists]
    MethodDecl(
      MethodTypeName(
        TypeV(
        ) [TypeV]
       main
      ) [MethodTypeName]
      NoMethodDeclFormPars(
      ) [NoMethodDeclFormPars]
      NoVarDeclMore(
      ) [NoVarDeclMore]
      MoreStatements(
        MoreStatements(
          MoreStatements(
            MoreStatements(
              MoreStatements(
                NoMoreStatement(
                ) [NoMoreStatement]
                StatementSingle(
                  MatchedStmt(
                    StatementDesignator(
                      DesignatorStatement(
                        Designator(
                          DesignatorMoreSingle(
                            DesignatorName(
                             y
                            ) [DesignatorName]
                          ) [DesignatorMoreSingle]
                        ) [Designator]
                        DesignatorAdditionAE(
                          Assignop(
                          ) [Assignop]
                          DesignatorAdditionExprSem(
                            PlusExpr(
                              NoMulopTerm(
                                FactorVarFunNoAct(
                                  Designator(
                                    DesignatorMoreSingle(
                                      DesignatorName(
                                       x
                                      ) [DesignatorName]
                                    ) [DesignatorMoreSingle]
                                  ) [Designator]
                                ) [FactorVarFunNoAct]
                              ) [NoMulopTerm]
                            ) [PlusExpr]
                          ) [DesignatorAdditionExprSem]
                        ) [DesignatorAdditionAE]
                      ) [DesignatorStatement]
                    ) [StatementDesignator]
                  ) [MatchedStmt]
                ) [StatementSingle]
              ) [MoreStatements]
              StatementSingle(
                MatchedStmt(
                  StatementBreak(
                  ) [StatementBreak]
                ) [MatchedStmt]
              ) [StatementSingle]
            ) [MoreStatements]
            StatementSingle(
              MatchedStmt(
                StatementContinue(
                ) [StatementContinue]
              ) [MatchedStmt]
            ) [StatementSingle]
          ) [MoreStatements]
          StatementSingle(
            UnmatchedStmt(
              UnmatchedIf(
                ConditionIfNoError(
                  Condition(
                    NoConditionMore(
                      CoundTerm(
                        NoCoundTermMore(
                          CoundFactExprOne(
                            PlusExpr(
                              NoMulopTerm(
                                FactorConst(
                                  NumConst(
                                   1
                                  ) [NumConst]
                                ) [FactorConst]
                              ) [NoMulopTerm]
                            ) [PlusExpr]
                          ) [CoundFactExprOne]
                        ) [NoCoundTermMore]
                      ) [CoundTerm]
                    ) [NoConditionMore]
                  ) [Condition]
                ) [ConditionIfNoError]
                MatchedStmt(
                  StatementPrintNoNum(
                    PlusExpr(
                      NoMulopTerm(
                        FactorVar(
                          Designator(
                            DesignatorMoreSingle(
                              DesignatorName(
                               a
                              ) [DesignatorName]
                            ) [DesignatorMoreSingle]
                          ) [Designator]
                        ) [FactorVar]
                      ) [NoMulopTerm]
                    ) [PlusExpr]
                  ) [StatementPrintNoNum]
                ) [MatchedStmt]
              ) [UnmatchedIf]
            ) [UnmatchedStmt]
          ) [StatementSingle]
        ) [MoreStatements]
        StatementSingle(
          MatchedStmt(
            StatementRead(
              Designator(
                DesignatorMoreSingle(
                  DesignatorName(
                   a
                  ) [DesignatorName]
                ) [DesignatorMoreSingle]
              ) [Designator]
            ) [StatementRead]
          ) [MatchedStmt]
        ) [StatementSingle]
      ) [MoreStatements]
    ) [MethodDecl]
  ) [MethodDeclLists]
) [Program]
INFO  19:35:03,820 - ===================================
ERROR 19:35:03,822 - GRESKA: Tip metode i povratni tip moraju biti isti na liniji 15
INFO  19:35:03,823 - Pristupa se globalnoj promenljivi y na liniji 20
INFO  19:35:03,823 - Pristupa se globalnoj promenljivi x na liniji 20
ERROR 19:35:03,823 - GRESKA: Pozvana funkcija nije metoda ili funkcija na liniji 20
ERROR 19:35:03,823 - GRESKA: Break naredba se moze koristiti samo unutar do while petlje na liniji 22
ERROR 19:35:03,823 - GRESKA: Continue naredba se moze koristiti samo unutar do while petlje na liniji 23
ERROR 19:35:03,823 - GRESKA: Expr mora biti bool na liniji 25
ERROR 19:35:03,823 - GRESKA: Tip uslovnog iraza mora biti bool na liniji 25
INFO  19:35:03,824 - Koristi se promenljiva tipa record ili klase a na liniji 26
INFO  19:35:03,824 - Pristupa se globalnoj promenljivi a na liniji 26
ERROR 19:35:03,824 - GRESKA: Expr mora biti tipa bool, char ili int na liniji 26
INFO  19:35:03,824 - Koristi se promenljiva tipa record ili klase a na liniji 28
INFO  19:35:03,824 - Pristupa se globalnoj promenljivi a na liniji 28
ERROR 19:35:03,824 - GRESKA: Designator mora biti tipa bool, char ili int na liniji 28
INFO  19:35:03,824 - ===================================
ERROR 19:35:03,824 - Parsiranje NIJE uspesno zavrseno!
