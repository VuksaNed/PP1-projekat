// generated with ast extension for cup
// version 0.8
// 26/0/2022 15:17:51


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(ConstDeclComma ConstDeclComma);
    public void visit(FormPars FormPars);
    public void visit(GlobalVarDecl GlobalVarDecl);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(FormParsSinglePom FormParsSinglePom);
    public void visit(ConstPar ConstPar);
    public void visit(MoreExpr MoreExpr);
    public void visit(Relop Relop);
    public void visit(FormalParamList FormalParamList);
    public void visit(ConditionMore ConditionMore);
    public void visit(ClassMethodDecl ClassMethodDecl);
    public void visit(VarDecClasslList VarDecClasslList);
    public void visit(ClassDeclVarDecl ClassDeclVarDecl);
    public void visit(GlobalDecl GlobalDecl);
    public void visit(Expr Expr);
    public void visit(TypeVoid TypeVoid);
    public void visit(VarDeclBrace VarDeclBrace);
    public void visit(Unmatched Unmatched);
    public void visit(GlobalVarDeclSem GlobalVarDeclSem);
    public void visit(ProgPar ProgPar);
    public void visit(CoundTermMore CoundTermMore);
    public void visit(ActualParamList ActualParamList);
    public void visit(Const Const);
    public void visit(Mulop Mulop);
    public void visit(DesignatorMore DesignatorMore);
    public void visit(Addop Addop);
    public void visit(StatementList StatementList);
    public void visit(ConstDecl ConstDecl);
    public void visit(MethodDeclFormPars MethodDeclFormPars);
    public void visit(ClassDeclBody ClassDeclBody);
    public void visit(FactorNewMore FactorNewMore);
    public void visit(GlobalVarDeclComm GlobalVarDeclComm);
    public void visit(CoundFact CoundFact);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(ClassExtendCheckError ClassExtendCheckError);
    public void visit(ActualPars ActualPars);
    public void visit(ClassDeclVarDeclMore ClassDeclVarDeclMore);
    public void visit(ActParsExpr ActParsExpr);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ClassExtend ClassExtend);
    public void visit(MoreStatement MoreStatement);
    public void visit(VarDeclClassMore VarDeclClassMore);
    public void visit(MoreTerm MoreTerm);
    public void visit(DesignatorAdditionExprSemi DesignatorAdditionExprSemi);
    public void visit(Matched Matched);
    public void visit(VarDeclList VarDeclList);
    public void visit(DesignatorAddition DesignatorAddition);
    public void visit(SingleStatement SingleStatement);
    public void visit(Term Term);
    public void visit(FactorDesignMore FactorDesignMore);
    public void visit(VarDeclMore VarDeclMore);
    public void visit(ConditionIf ConditionIf);
    public void visit(FormParsSingle FormParsSingle);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(LessEqual LessEqual);
    public void visit(Less Less);
    public void visit(GreaterEqual GreaterEqual);
    public void visit(Greater Greater);
    public void visit(NotEqual NotEqual);
    public void visit(EqualEqual EqualEqual);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(DesignatorMoreSingle DesignatorMoreSingle);
    public void visit(DesignatorMoreExpr DesignatorMoreExpr);
    public void visit(DesignatorMoreIdent DesignatorMoreIdent);
    public void visit(DesignatorName DesignatorName);
    public void visit(Designator Designator);
    public void visit(NoFactorNewMore NoFactorNewMore);
    public void visit(FactorNewMor FactorNewMor);
    public void visit(NoFactorDesignMore NoFactorDesignMore);
    public void visit(NoFactorDesignMoreActPars NoFactorDesignMoreActPars);
    public void visit(FactorDesignMoreActPars FactorDesignMoreActPars);
    public void visit(FactorNewBrack FactorNewBrack);
    public void visit(FactorParen FactorParen);
    public void visit(FactorNewArray FactorNewArray);
    public void visit(FactorNewNoArray FactorNewNoArray);
    public void visit(FactorConst FactorConst);
    public void visit(FactorVarFunAct FactorVarFunAct);
    public void visit(FactorVarFunNoAct FactorVarFunNoAct);
    public void visit(FactorVar FactorVar);
    public void visit(NoMoreTerm NoMoreTerm);
    public void visit(MoreTermMulop MoreTermMulop);
    public void visit(TermMulop TermMulop);
    public void visit(NoMulopTerm NoMulopTerm);
    public void visit(NoMoreExpr NoMoreExpr);
    public void visit(MorExpr MorExpr);
    public void visit(MoreExp MoreExp);
    public void visit(PlusExpr PlusExpr);
    public void visit(MinusExpr MinusExpr);
    public void visit(CoundFactExprMore CoundFactExprMore);
    public void visit(CoundFactExprOne CoundFactExprOne);
    public void visit(NoCoundTermMore NoCoundTermMore);
    public void visit(CoundTermMor CoundTermMor);
    public void visit(CoundTerm CoundTerm);
    public void visit(NoConditionMore NoConditionMore);
    public void visit(ConditionMor ConditionMor);
    public void visit(Condition Condition);
    public void visit(ErrorConditionIf ErrorConditionIf);
    public void visit(ConditionIfNoError ConditionIfNoError);
    public void visit(NoActParsExpr NoActParsExpr);
    public void visit(ActParsExprMore ActParsExprMore);
    public void visit(ActPars ActPars);
    public void visit(DesignatorAdditionExprSemiError DesignatorAdditionExprSemiError);
    public void visit(DesignatorAdditionExprSem DesignatorAdditionExprSem);
    public void visit(DesignatorAdditionMinusMinus DesignatorAdditionMinusMinus);
    public void visit(DesignatorAdditionPlusPlus DesignatorAdditionPlusPlus);
    public void visit(DesignatorAdditionNoActPars DesignatorAdditionNoActPars);
    public void visit(DesignatorAdditionActPars DesignatorAdditionActPars);
    public void visit(DesignatorAdditionAE DesignatorAdditionAE);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Statements Statements);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementLists StatementLists);
    public void visit(While While);
    public void visit(Do Do);
    public void visit(StatementStatements StatementStatements);
    public void visit(StatementGoto StatementGoto);
    public void visit(StatementPrintNoNum StatementPrintNoNum);
    public void visit(StatementPrintNum StatementPrintNum);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturnNoExpr StatementReturnNoExpr);
    public void visit(StatementReturnExpr StatementReturnExpr);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementDoWhile StatementDoWhile);
    public void visit(StatementIf StatementIf);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(Else Else);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmatchedStmtLabel UnmatchedStmtLabel);
    public void visit(UnmatchedStmt UnmatchedStmt);
    public void visit(MatchedStmtLabel MatchedStmtLabel);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(StatementSingle StatementSingle);
    public void visit(Type Type);
    public void visit(NoBraceFormParsSingle NoBraceFormParsSingle);
    public void visit(FormParsSingl FormParsSingl);
    public void visit(ErrorFormalParamRparen ErrorFormalParamRparen);
    public void visit(FormParsSinglPom FormParsSinglPom);
    public void visit(ErrorFormalParamComma ErrorFormalParamComma);
    public void visit(FormalParamListComma FormalParamListComma);
    public void visit(FormParam FormParam);
    public void visit(FormParams FormParams);
    public void visit(NoMethodDeclFormPars NoMethodDeclFormPars);
    public void visit(MethodDeclFormPar MethodDeclFormPar);
    public void visit(TypeT TypeT);
    public void visit(TypeV TypeV);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMoreStatement NoMoreStatement);
    public void visit(MoreStatements MoreStatements);
    public void visit(ConstructorName ConstructorName);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(RecordName RecordName);
    public void visit(RecordDecl RecordDecl);
    public void visit(NoClassMethodDecl NoClassMethodDecl);
    public void visit(ClassMethodDecla ClassMethodDecla);
    public void visit(NoClassDeclBody NoClassDeclBody);
    public void visit(ClassDeclCon ClassDeclCon);
    public void visit(ClassDeclBodConMeth ClassDeclBodConMeth);
    public void visit(ClassDeclBodNoConMeth ClassDeclBodNoConMeth);
    public void visit(ClassDeclBodNoConNoMeth ClassDeclBodNoConNoMeth);
    public void visit(ErrorClassExtendCheck ErrorClassExtendCheck);
    public void visit(ClassExtendCheckNoError ClassExtendCheckNoError);
    public void visit(NoClassExtends NoClassExtends);
    public void visit(ClassExtends ClassExtends);
    public void visit(ClassVarDecl ClassVarDecl);
    public void visit(ErrorClassDeclVarDeclMore ErrorClassDeclVarDeclMore);
    public void visit(ClassDeclVarDeclMor ClassDeclVarDeclMor);
    public void visit(NoClassDeclVarDeclMore NoClassDeclVarDeclMore);
    public void visit(ClassDeclVarDecla ClassDeclVarDecla);
    public void visit(ClassName ClassName);
    public void visit(ClassDecl ClassDecl);
    public void visit(NoVarDeclClassMore NoVarDeclClassMore);
    public void visit(VarDeclClassMor VarDeclClassMor);
    public void visit(NoVarDeclMore NoVarDeclMore);
    public void visit(VarDeclMor VarDeclMor);
    public void visit(NoVarDeclBraces NoVarDeclBraces);
    public void visit(VarDeclBraces VarDeclBraces);
    public void visit(NoVarDecClasslList NoVarDecClasslList);
    public void visit(VarDecClasslLists VarDecClasslLists);
    public void visit(NoVarDeclLists NoVarDeclLists);
    public void visit(VarDeclLists VarDeclLists);
    public void visit(VarDeclClass VarDeclClass);
    public void visit(VarDecl VarDecl);
    public void visit(VarDeclClassName VarDeclClassName);
    public void visit(VarDeclLocallName VarDeclLocallName);
    public void visit(VarDeclGlobalName VarDeclGlobalName);
    public void visit(GlobalVarDeclCommaError GlobalVarDeclCommaError);
    public void visit(GlobalVarDeclComma GlobalVarDeclComma);
    public void visit(GlobalVarDeclSemiError GlobalVarDeclSemiError);
    public void visit(GlobalVarDeclSemi GlobalVarDeclSemi);
    public void visit(GlobalDeclalartion GlobalDeclalartion);
    public void visit(GlobalDeclarations GlobalDeclarations);
    public void visit(GlobVarDecl GlobVarDecl);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(ConstAsign ConstAsign);
    public void visit(ConstParError ConstParError);
    public void visit(ConstParam ConstParam);
    public void visit(ConstDeclCommaError ConstDeclCommaError);
    public void visit(ConstDeclarComma ConstDeclarComma);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(ConstDeclarations ConstDeclarations);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(NoMethodDeclList NoMethodDeclList);
    public void visit(MethodDeclLists MethodDeclLists);
    public void visit(NoProgPar NoProgPar);
    public void visit(ProgramRecordDecl ProgramRecordDecl);
    public void visit(ProgramClassDecl ProgramClassDecl);
    public void visit(ProgramVarDecl ProgramVarDecl);
    public void visit(ProgramConstDecl ProgramConstDecl);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
